name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2
        with:
          ssh_key: ${{ secrets.SSH_KEY }}

      - name: Fetch submodules 🚚
        run: |
          eval "$(ssh-agent)"
          ssh-add - <<< "${{ secrets.SSH_KEY_SLIDES }}"
          git submodule update --init --recursive

      - name: Setup node env 🏗
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Run linter 👀
        run: yarn lint

      - name: Create Pull Request 🚀
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          title: Update submodules
          labels: Auto-PR
          branch: bot/staging
          assignees: ${{ github.actor }}
          author: kotokaze <62094392+kotokaze@users.noreply.github.com>
          branch-suffix: short-commit-hash
          commit-message: ':recycle: Fetch latest submodules'
          base: release
          delete-branch: true

      - name: Check for changes 🔎
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
